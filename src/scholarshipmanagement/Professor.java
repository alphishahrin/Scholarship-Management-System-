/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package scholarshipmanagement;

import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author SARK
 */
public class Professor extends javax.swing.JInternalFrame {
    
    String StudentId;
    int currentLength1 = 0;
    int modIndex1  =0;
    ArrayList<ProfessorInfo> arr1 = new ArrayList ();
    
    int currentLength2 = 0;
    int modIndex2  =0;
    ArrayList<ProfessorExpertiseInfo> arr2 = new ArrayList ();

    /** Creates new form PackageInfo */
    public Professor() {
        initComponents();
        
    }
    
    public Professor(String StudentId) {
        this.StudentId = StudentId;
        initComponents();
        
        arr1 = new ConnectMSSQL().getProfessorInfo("where  exists (Select ProfID from Professor) ");
        proftable1.setDefaultEditor(Object.class, null);
        clearTable(proftable1);
        
        TableColumnModel columnModel = proftable1.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(10);
        columnModel.getColumn(1).setPreferredWidth(60);
        columnModel.getColumn(2).setPreferredWidth(70);
        columnModel.getColumn(3).setPreferredWidth(30);
        columnModel.getColumn(4).setPreferredWidth(100);
        columnModel.getColumn(5).setPreferredWidth(300);
        columnModel.getColumn(6).setPreferredWidth(30);
        columnModel.getColumn(7).setPreferredWidth(30);
        
        arr2 = new ConnectMSSQL().getProfessorExpertiseInfo("where  exists (Select ProfID from ProfessorExpertise) ");
        proftable2.setDefaultEditor(Object.class, null);
        clearTable(proftable2);
        
        TableColumnModel columnModel1 = proftable2.getColumnModel();
        columnModel1.getColumn(0).setPreferredWidth(10);
        columnModel1.getColumn(1).setPreferredWidth(300);
        columnModel1.getColumn(2).setPreferredWidth(300);
        
        if((modIndex1+1)*8>arr1.size())
            currentLength1 = arr1.size()%8;
        else currentLength1 = 8;
        
        for(int i=0;i<currentLength1;i++)
        {
            proftable1.getModel().setValueAt(arr1.get(i).getProfId(), i, 0);
            proftable1.getModel().setValueAt(arr1.get(i).getFirstName(), i, 1);
            proftable1.getModel().setValueAt(arr1.get(i).getEmail(), i, 2);
            proftable1.getModel().setValueAt(arr1.get(i).getUniId(), i, 3);
            proftable1.getModel().setValueAt(arr1.get(i).getDepartment(), i, 4);
            proftable1.getModel().setValueAt(arr1.get(i).getEduBackground(), i, 5);
            proftable1.getModel().setValueAt(arr1.get(i).getFunding(), i, 6);
            proftable1.getModel().setValueAt("Details", i, 7);
            
        }
        
        if((modIndex2+1)*8>arr2.size())
            currentLength2 = arr2.size()%8;
        else currentLength2 = 8;
        
        for(int i=0;i<currentLength2;i++)
        {
            proftable2.getModel().setValueAt(arr2.get(i).getProfId(), i, 0);
            proftable2.getModel().setValueAt(arr2.get(i).getInterest(), i, 1);
            proftable2.getModel().setValueAt(arr2.get(i).getExpertise(), i, 2);
           
        }
        
        proftable1.getColumn("Action").setCellRenderer(new ButtonRenderer(currentLength1));
        proftable1.getColumn("Action").setCellEditor(new ButtonEditor(new JCheckBox(),proftable1));
        
        prev1.setVisible(false);
        if(arr1.size()<=8)
            next1.setVisible(false);
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        fundTo = new javax.swing.JTextField();
        searchExp = new javax.swing.JTextField();
        searchDept = new javax.swing.JTextField();
        searchUni = new javax.swing.JTextField();
        searchEdu = new javax.swing.JTextField();
        search1 = new javax.swing.JButton();
        reset1 = new javax.swing.JButton();
        prev1 = new javax.swing.JButton();
        next1 = new javax.swing.JButton();
        searchName = new javax.swing.JTextField();
        searchInt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        proftable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        proftable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        fundFrom = new javax.swing.JTextField();
        search2 = new javax.swing.JButton();
        sortby = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        reset2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(750, 570));
        setMinimumSize(new java.awt.Dimension(750, 570));
        setPreferredSize(new java.awt.Dimension(1320, 730));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(114, 72, 43));

        label1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 255, 255));
        label1.setText("Professor");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(517, 517, 517)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(595, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1310, 65));

        fundTo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        fundTo.setText("To");
        fundTo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundToMouseClicked(evt);
            }
        });
        fundTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fundToActionPerformed(evt);
            }
        });
        fundTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fundToKeyTyped(evt);
            }
        });
        getContentPane().add(fundTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 140, 90, 30));

        searchExp.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        searchExp.setText("Search By Expertise");
        searchExp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchExpMouseClicked(evt);
            }
        });
        getContentPane().add(searchExp, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 450, 250, 40));

        searchDept.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        searchDept.setText("Search By Department");
        searchDept.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchDeptMouseClicked(evt);
            }
        });
        searchDept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDeptActionPerformed(evt);
            }
        });
        getContentPane().add(searchDept, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 210, 30));

        searchUni.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        searchUni.setText("Search By University");
        searchUni.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchUniMouseClicked(evt);
            }
        });
        searchUni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUniActionPerformed(evt);
            }
        });
        getContentPane().add(searchUni, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, 210, -1));

        searchEdu.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        searchEdu.setText("Search By Education");
        searchEdu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchEduMouseClicked(evt);
            }
        });
        searchEdu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEduActionPerformed(evt);
            }
        });
        getContentPane().add(searchEdu, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 210, 30));

        search1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scholarshipmanagement/transparency.png"))); // NOI18N
        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });
        getContentPane().add(search1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 90, 80, 30));

        reset1.setText("RESET");
        reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset1ActionPerformed(evt);
            }
        });
        getContentPane().add(reset1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 140, 80, 30));

        prev1.setText("Prev");
        prev1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prev1ActionPerformed(evt);
            }
        });
        getContentPane().add(prev1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 90, -1));

        next1.setText("Next");
        next1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                next1ActionPerformed(evt);
            }
        });
        getContentPane().add(next1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 400, 80, -1));

        searchName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        searchName.setText("Search By Name");
        searchName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchNameMouseClicked(evt);
            }
        });
        searchName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchNameActionPerformed(evt);
            }
        });
        getContentPane().add(searchName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 210, 30));

        searchInt.setFont(new java.awt.Font("Tempus Sans ITC", 0, 18)); // NOI18N
        searchInt.setText("Search By Interest");
        searchInt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchIntMouseClicked(evt);
            }
        });
        getContentPane().add(searchInt, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 240, 40));

        proftable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Prof ID", "Interest", "Expertise"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(proftable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 510, 1180, 180));

        proftable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Prof ID", "Name", "Email", "University Id", "Department", "Educational Background", "Funding", "Action"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        proftable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                proftable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(proftable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 1280, 180));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel2.setText("Funding Range:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 170, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scholarshipmanagement/sort-down.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 90, 60, 30));

        fundFrom.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        fundFrom.setText("From");
        fundFrom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fundFromMouseClicked(evt);
            }
        });
        fundFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fundFromActionPerformed(evt);
            }
        });
        fundFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fundFromKeyTyped(evt);
            }
        });
        getContentPane().add(fundFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 90, 30));

        search2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scholarshipmanagement/transparency.png"))); // NOI18N
        search2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search2ActionPerformed(evt);
            }
        });
        getContentPane().add(search2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 420, -1, 50));

        sortby.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        sortby.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Department", "University Id", "Funding" }));
        getContentPane().add(sortby, new org.netbeans.lib.awtextra.AbsoluteConstraints(1064, 90, 150, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Sort By:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 90, 60, 30));

        reset2.setText("RESET");
        reset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset2ActionPerformed(evt);
            }
        });
        getContentPane().add(reset2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 420, 90, 50));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scholarshipmanagement/fg.jpg"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1310, 730));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void clearTable(final JTable table) {
        for (int i = 0; i < table.getRowCount(); i++) {
            for(int j = 0; j < table.getColumnCount(); j++) {
                table.setValueAt("", i, j);
            }
        }
    }
    
    private void fundToMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundToMouseClicked
        // TODO add your handling code here:
        if(fundTo.getText().equals("Search By Funding"))
        fundTo.setText("");
    }//GEN-LAST:event_fundToMouseClicked

    private void fundToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fundToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fundToActionPerformed

    private void searchExpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchExpMouseClicked
        // TODO add your handling code here:
        if(searchExp.getText().equals("Search By Expertise"))
        searchExp.setText("");
    }//GEN-LAST:event_searchExpMouseClicked

    private void searchDeptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchDeptMouseClicked
        // TODO add your handling code here:

        if(searchDept.getText().equals("Search By Department"))
        searchDept.setText("");
    }//GEN-LAST:event_searchDeptMouseClicked

    private void searchDeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDeptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchDeptActionPerformed

    private void searchUniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchUniMouseClicked
        // TODO add your handling code here:
        if(searchUni.getText().equals("Search By University"))
        searchUni.setText("");
    }//GEN-LAST:event_searchUniMouseClicked

    private void searchUniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchUniActionPerformed

    private void searchEduMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchEduMouseClicked
        // TODO add your handling code here:
        if(searchEdu.getText().equals("Search By Education"))
        searchEdu.setText("");
    }//GEN-LAST:event_searchEduMouseClicked

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
        // TODO add your handling code here:
        String query = "";
        String temp;
        Double tempFrom, tempTo;

        temp = searchName.getText();
        if(temp.equals("Search By Name")==false && temp.length()>0)
        {
            if(query.length()==0)
            {
                query+= "where FirstName  LIKE '%"+temp+"%'";
            }
            else query+="and FirstName  LIKE '%"+temp+"%'";
        }

        temp = searchDept.getText();
        if(temp.equals("Search By Department")==false && temp.length()>0)
        {
            if(query.length()==0)
            {
                query+= "where Department  LIKE '%"+temp+"%'";
            }
            else query+="and Department  LIKE '%"+temp+"%'";
        }

        temp = searchUni.getText();
        if(temp.equals("Search By University")==false && temp.length()>0)
        {
            if(query.length()==0)
            {
                query+= "where UniID  ='"+temp+"'";
            }
            else query+="and UniID  ='"+temp+"'";
        }

        temp = searchEdu.getText();
        if(temp.equals("Search By Education")==false && temp.length()>0)
        {
            if(query.length()==0)
            {
                query+= "where EducationalBackground  LIKE '%"+temp+"%'";
            }
            else query+="and EducationalBackground  LIKE '%"+temp+"%'";
        }

        if (fundFrom.getText().length()==0 || fundTo.getText().length() ==0 ){
            JOptionPane.showMessageDialog(this, "Both of the Funding Filed Has to be Filled", "Warning",JOptionPane.WARNING_MESSAGE);
        }
        
        else if(fundFrom.getText().toString().equals("From")==false && fundTo.getText().toString().equals("To")==false){
            tempFrom = Double.valueOf(fundFrom.getText());
            tempTo = Double.valueOf(fundTo.getText());
            if(query.length()==0)
            {
                query+= "where Funding between "+tempFrom+" AND "+tempTo;
            }
            else query+="and Funding between "+tempFrom+" AND "+tempTo;
            
        }
        

        arr1.clear();
        arr1 = new ConnectMSSQL().getProfessorInfo(query);

        modIndex1 = 0;

        clearTable(proftable1);

        if((modIndex1+1)*8>arr1.size())
        currentLength1 = arr1.size()%16;
        else currentLength1 = 8;

        for(int i=0;i<currentLength1;i++)
        {
            proftable1.getModel().setValueAt(arr1.get(i).getProfId(), i, 0);
            proftable1.getModel().setValueAt(arr1.get(i).getFirstName(), i, 1);
            proftable1.getModel().setValueAt(arr1.get(i).getEmail(), i, 2);
            proftable1.getModel().setValueAt(arr1.get(i).getUniId(), i, 3);
            proftable1.getModel().setValueAt(arr1.get(i).getDepartment(), i, 4);
            proftable1.getModel().setValueAt(arr1.get(i).getEduBackground(), i, 5);
            proftable1.getModel().setValueAt(arr1.get(i).getFunding(), i, 6);
            proftable1.getModel().setValueAt("Details", i, 7);
        }

        proftable1.getColumn("Action").setCellRenderer(new ButtonRenderer(currentLength1));
        proftable1.getColumn("Action").setCellEditor(new ButtonEditor(new JCheckBox(),proftable1));

        prev1.setVisible(false);
        if(arr1.size()<=8)
        next1.setVisible(false);
    }//GEN-LAST:event_search1ActionPerformed

    private void reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset1ActionPerformed
        // TODO add your handling code here:
        searchName.setText("Search By Name");
        searchDept.setText("Search By Department");
        searchUni.setText("Search By University");
        searchEdu.setText("Search By Education");
        fundFrom.setText("From");
        fundTo.setText("To");
    }//GEN-LAST:event_reset1ActionPerformed

    private void prev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prev1ActionPerformed
        // TODO add your handling code here:
        modIndex1--;
        if(modIndex1==0)
        prev1.setVisible(false);
        next1.setVisible(true);
        clearTable(proftable1);
        if((modIndex1+1)*8>arr1.size())
        currentLength1 = arr1.size()%8;
        else currentLength1 = 8;

        for(int i=0;i<currentLength1;i++)
        {
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getProfId(), i, 0);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getFirstName(), i, 1);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getEmail(), i, 2);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getUniId(), i, 3);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getDepartment(), i, 4);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getEduBackground(), i, 5);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getFunding(), i, 6);
            proftable1.getModel().setValueAt("Details", i, 7);

        }
    }//GEN-LAST:event_prev1ActionPerformed

    private void next1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_next1ActionPerformed
        // TODO add your handling code here:
        modIndex1++;
        prev1.setVisible(true);
        if((modIndex1+1)*8>=arr1.size())
        next1.setVisible(false);
        clearTable(proftable1);
        if((modIndex1+1)*8>arr1.size())
        currentLength1 = arr1.size()%8;
        else currentLength1 = 8;

        for(int i=0;i<currentLength1;i++)
        {
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getProfId(), i, 0);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getFirstName(), i, 1);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getEmail(), i, 2);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getUniId(), i, 3);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getDepartment(), i, 4);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getEduBackground(), i, 5);
            proftable1.getModel().setValueAt(arr1.get(i+8*modIndex1).getFunding(), i, 6);
            proftable1.getModel().setValueAt("Details", i, 7);

        }
    }//GEN-LAST:event_next1ActionPerformed

    private void searchNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchNameMouseClicked
        // TODO add your handling code here:
        if(searchName.getText().equals("Search By Name"))
        searchName.setText("");
    }//GEN-LAST:event_searchNameMouseClicked

    private void searchNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchNameActionPerformed

    private void searchIntMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchIntMouseClicked
        // TODO add your handling code here:
        if(searchInt.getText().equals("Search By Interest"))
        searchInt.setText("");
    }//GEN-LAST:event_searchIntMouseClicked

    private void proftable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_proftable1MouseClicked
        // TODO add your handling code here:
        int row = proftable1.getSelectedRow();
        int col = proftable1.getSelectedColumn();
        System.out.println(row +" "+ col+" "+arr1.size());
        if(col==7 && row<currentLength1)
        {
            new ProfessorInformation(StudentId,Integer.toString(arr1.get(row+8*modIndex1).getProfId())).setVisible(true);
            new StudentDashboard(StudentId).setVisible(false);
            //this.setVisible(false);

        }
    }//GEN-LAST:event_proftable1MouseClicked

    private void search2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search2ActionPerformed
        // TODO add your handling code here:
        String query = "";
        String temp;

        temp = searchInt.getText();
        if(temp.equals("Search By Interest")==false && temp.length()>0)
        {
            if(query.length()==0)
            {
                query+= "where Interest  LIKE '%"+temp+"%'";
            }
            else query+="and Interest  LIKE '%"+temp+"%'";
        }

        temp = searchExp.getText();
        if(temp.equals("Search By Expertise")==false && temp.length()>0)
        {
            if(query.length()==0)
            {
                query+= "where TopicName  LIKE '%"+temp+"%'";
            }
            else query+="and TopicName  LIKE '%"+temp+"%'";
        }

        arr2.clear();
        arr2 = new ConnectMSSQL().getProfessorExpertiseInfo(query);

        modIndex2 = 0;

        clearTable(proftable2);

        if((modIndex2+1)*8>arr2.size())
        currentLength2 = arr2.size()%16;
        else currentLength2 = 8;

        for(int i=0;i<currentLength2;i++)
        {
            proftable2.getModel().setValueAt(arr2.get(i).getProfId(), i, 0);
            proftable2.getModel().setValueAt(arr2.get(i).getInterest(), i, 1);
            proftable2.getModel().setValueAt(arr2.get(i).getExpertise(), i, 2);
        }

        
    }//GEN-LAST:event_search2ActionPerformed

    private void reset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset2ActionPerformed
        // TODO add your handling code here:
        searchInt.setText("Search By Interest");
        searchExp.setText("Search By Expertise");
    }//GEN-LAST:event_reset2ActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked

    private void searchEduActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEduActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchEduActionPerformed

    private void fundFromMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fundFromMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fundFromMouseClicked

    private void fundFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fundFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fundFromActionPerformed

    private void fundFromKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fundFromKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_fundFromKeyTyped

    private void fundToKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fundToKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!((c >= '0') && (c <= '9') ||
         (c == KeyEvent.VK_BACK_SPACE) ||
         (c == KeyEvent.VK_DELETE))) {
        getToolkit().beep();
        evt.consume();
        }
    }//GEN-LAST:event_fundToKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String sortItem = sortby.getSelectedItem().toString();
        if(sortItem == "Department")
        {
            String query="order by Department";
            arr1.clear();
            arr1 = new ConnectMSSQL().getProfessorInfo(query);

            modIndex1 = 0;

            clearTable(proftable1);
            
            if((modIndex1+1)*8>arr1.size())
                currentLength1 = arr1.size()%16;
            else currentLength1 = 8;

            for(int i=0;i<currentLength1;i++)
            {
                proftable1.getModel().setValueAt(arr1.get(i).getProfId(), i, 0);
                proftable1.getModel().setValueAt(arr1.get(i).getFirstName(), i, 1);
                proftable1.getModel().setValueAt(arr1.get(i).getEmail(), i, 2);
                proftable1.getModel().setValueAt(arr1.get(i).getUniId(), i, 3);
                proftable1.getModel().setValueAt(arr1.get(i).getDepartment(), i, 4);
                proftable1.getModel().setValueAt(arr1.get(i).getEduBackground(), i, 5);
                proftable1.getModel().setValueAt(arr1.get(i).getFunding(), i, 6);
                proftable1.getModel().setValueAt("Details", i, 7);
            }

            proftable1.getColumn("Action").setCellRenderer(new ButtonRenderer(currentLength1));
            proftable1.getColumn("Action").setCellEditor(new ButtonEditor(new JCheckBox(),proftable1));

            prev1.setVisible(false);
            if(arr1.size()<=8)
                next1.setVisible(false);
        }
        
        else if(sortItem == "University Id")
        {
            String query="order by UniID ";
            arr1.clear();
            arr1 = new ConnectMSSQL().getProfessorInfo(query);

            modIndex1 = 0;

            clearTable(proftable1);
            
            if((modIndex1+1)*8>arr1.size())
                currentLength1 = arr1.size()%16;
            else currentLength1 = 8;

            for(int i=0;i<currentLength1;i++)
            {
                proftable1.getModel().setValueAt(arr1.get(i).getProfId(), i, 0);
                proftable1.getModel().setValueAt(arr1.get(i).getFirstName(), i, 1);
                proftable1.getModel().setValueAt(arr1.get(i).getEmail(), i, 2);
                proftable1.getModel().setValueAt(arr1.get(i).getUniId(), i, 3);
                proftable1.getModel().setValueAt(arr1.get(i).getDepartment(), i, 4);
                proftable1.getModel().setValueAt(arr1.get(i).getEduBackground(), i, 5);
                proftable1.getModel().setValueAt(arr1.get(i).getFunding(), i, 6);
                proftable1.getModel().setValueAt("Details", i, 7);
            }

            proftable1.getColumn("Action").setCellRenderer(new ButtonRenderer(currentLength1));
            proftable1.getColumn("Action").setCellEditor(new ButtonEditor(new JCheckBox(),proftable1));

            prev1.setVisible(false);
            if(arr1.size()<=8)
                next1.setVisible(false);
        }
        
        else if(sortItem == "Funding")
        {
            String query="order by Funding ";
            arr1.clear();
            arr1 = new ConnectMSSQL().getProfessorInfo(query);

            modIndex1 = 0;

            clearTable(proftable1);
            
            if((modIndex1+1)*8>arr1.size())
                currentLength1 = arr1.size()%16;
            else currentLength1 = 8;

            for(int i=0;i<currentLength1;i++)
            {
                proftable1.getModel().setValueAt(arr1.get(i).getProfId(), i, 0);
                proftable1.getModel().setValueAt(arr1.get(i).getFirstName(), i, 1);
                proftable1.getModel().setValueAt(arr1.get(i).getEmail(), i, 2);
                proftable1.getModel().setValueAt(arr1.get(i).getUniId(), i, 3);
                proftable1.getModel().setValueAt(arr1.get(i).getDepartment(), i, 4);
                proftable1.getModel().setValueAt(arr1.get(i).getEduBackground(), i, 5);
                proftable1.getModel().setValueAt(arr1.get(i).getFunding(), i, 6);
                proftable1.getModel().setValueAt("Details", i, 7);
            }

            proftable1.getColumn("Action").setCellRenderer(new ButtonRenderer(currentLength1));
            proftable1.getColumn("Action").setCellEditor(new ButtonEditor(new JCheckBox(),proftable1));

            prev1.setVisible(false);
            if(arr1.size()<=8)
                next1.setVisible(false);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fundFrom;
    private javax.swing.JTextField fundTo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label label1;
    private javax.swing.JButton next1;
    private javax.swing.JButton prev1;
    private javax.swing.JTable proftable1;
    private javax.swing.JTable proftable2;
    private javax.swing.JButton reset1;
    private javax.swing.JButton reset2;
    private javax.swing.JButton search1;
    private javax.swing.JButton search2;
    private javax.swing.JTextField searchDept;
    private javax.swing.JTextField searchEdu;
    private javax.swing.JTextField searchExp;
    private javax.swing.JTextField searchInt;
    private javax.swing.JTextField searchName;
    private javax.swing.JTextField searchUni;
    private javax.swing.JComboBox<String> sortby;
    // End of variables declaration//GEN-END:variables

}
